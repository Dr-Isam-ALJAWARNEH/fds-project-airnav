# If you haven't already merged and cleaned the data using the datascience Table,
# run the merging/cleaning cell from the previous step first.

# For summary statistics analysis, we'll import required modules
import statistics
from collections import Counter

# Function to determine if a value can be interpreted as a number
def is_numeric(x):
    try:
        float(x)
        return True
    except:
        return False

# Function to compute summary statistics for a numeric column
def summary_numeric(column):
    # Filter out non-numeric values
    numeric_values = [float(x) for x in column if is_numeric(x)]
    if not numeric_values:
        return {}
    count = len(numeric_values)
    mean = statistics.mean(numeric_values)
    stdev = statistics.stdev(numeric_values) if count > 1 else 0
    min_val = min(numeric_values)
    max_val = max(numeric_values)
    median = statistics.median(numeric_values)
    sorted_vals = sorted(numeric_values)
    n = len(sorted_vals)
    # Calculate first and third quartiles (using the median of lower and upper halves)
    if n % 2 == 0:
        lower = sorted_vals[:n//2]
        upper = sorted_vals[n//2:]
    else:
        lower = sorted_vals[:n//2]
        upper = sorted_vals[n//2+1:]
    q1 = statistics.median(lower) if lower else None
    q3 = statistics.median(upper) if upper else None
    
    return {'count': count,
            'mean': mean,
            'stdev': stdev,
            'min': min_val,
            'q1': q1,
            'median': median,
            'q3': q3,
            'max': max_val}

# Create a summary dictionary to hold the analysis for each column
summary = {}

for label in merged_table.labels:
    col = merged_table.column(label)
    # Decide if column is numeric by checking if at least half the values are numeric
    numeric_count = sum(1 for x in col if is_numeric(x))
    if numeric_count >= len(col) / 2:
        summary[label] = summary_numeric(col)
    else:
        # For categorical/text columns, report the top 5 most common values and total unique values
        freq = Counter(col)
        top_values = freq.most_common(5)
        summary[label] = {'top 5 values': top_values, 'total unique': len(freq)}

# Print overall information and per-column summaries
print("Summary Statistics Analysis:")
print("Total number of rows:", merged_table.num_rows)
print("Total number of columns:", len(merged_table.labels))
print()

for label, stats in summary.items():
    print(f"Column: {label}")
    for stat, value in stats.items():
        print(f"  {stat}: {value}")
    print()
